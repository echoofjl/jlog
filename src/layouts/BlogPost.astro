---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <script is:inline>
      document.addEventListener("DOMContentLoaded", () => {
        const toc = document.getElementById("toc");
        const headings = document.querySelectorAll("article h2, article h3");

        const ul = document.createElement("ul");

        headings.forEach((heading) => {
          if (!heading.id) return;

          const li = document.createElement("li");
          const a = document.createElement("a");
          a.href = `#${heading.id}`;
          a.textContent = heading.textContent;

          if (heading.tagName.toLowerCase() === "h3") {
            li.style.marginLeft = "1rem";
            li.style.fontSize = "0.9rem";
          }

          li.appendChild(a);
          ul.appendChild(li);
        });

        if (ul.children.length > 0) {
          toc.appendChild(ul);
        } else {
          document.querySelector(".post-outline").style.display = "none";
        }
      });
    </script>
  </head>

  <body class="blog-post">
    <Header />
    <main class="container">
      <header class="post-header">
        <h1 class="no-shadow">{title}</h1>
        <div class="post-meta">
          <FormattedDate date={pubDate} />
          {
            updatedDate && (
              <span>
                {" "}
                | Updated on <FormattedDate date={updatedDate} />
              </span>
            )
          }
        </div>
      </header>
      <div class="content-layout">
        <article class="post-content prose">
          <slot />
        </article>
        <aside class="post-outline">
          <nav id="toc"></nav>
        </aside>
      </div>
    </main>
  </body>
</html>

<style>
  .container {
    margin: 0 auto;
    padding: 1rem;
  }

  .post-header {
    margin-bottom: 2rem;
    margin-top: 2rem;
    text-align: center;
    padding: 1rem 0;
    background: none;
    border: none;
  }

  .post-header h1.no-shadow {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    line-height: 1.3;
    text-shadow: none !important;
  }

  .content-layout {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    max-width: 100%;
  }

  .post-content {
    flex: 3 1 0;
    min-width: 0;
    background: rgba(0, 0, 0, 0.8);
    padding: 1rem;
    border-radius: 8px;
    overflow-wrap: break-word;
  }

  .post-outline {
    flex: 1 1 200px;
    max-width: 300px;
    position: sticky;
    top: 6rem;
    padding: 1rem;
    border-left: 1px solid var(--accent);
    background: rgba(0, 0, 0, 0.8);
    box-shadow: var(--box-shadow);
    border-radius: 8px;
  }

  @media (max-width: 768px) {
    .content-layout {
      flex-direction: column;
    }

    .post-outline {
      position: relative;
      top: auto;
      max-width: 100%;
      border-left: none;
      border-top: 1px solid var(--accent);
    }
  }
</style>
