---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <script is:inline>
      document.addEventListener("DOMContentLoaded", () => {
        const toc = document.getElementById("toc");
        const headings = document.querySelectorAll("article h2, article h3");

        const ul = document.createElement("ul");

        headings.forEach((heading) => {
          if (!heading.id) return;

          const li = document.createElement("li");
          const a = document.createElement("a");
          a.href = `#${heading.id}`;
          a.textContent = heading.textContent;

          if (heading.tagName.toLowerCase() === "h3") {
            li.style.marginLeft = "1rem"; // indent h3
            li.style.fontSize = "0.9rem";
          }

          li.appendChild(a);
          ul.appendChild(li);
        });

        toc.appendChild(ul);
      });
    </script></head
  >

  <body class="blog-post">
    <Header />
    <main class="container">
      <header class="post-header">
        <h1>{title}</h1>
        <div class="post-meta">
          <FormattedDate date={pubDate} />
          {
            updatedDate && (
              <span>
                {" "}
                | Updated on <FormattedDate date={updatedDate} />
              </span>
            )
          }
        </div>
      </header>
      <div class="content-layout">
        <article class="post-content prose">
          <slot />
        </article>
        <aside class="post-outline">
          <nav id="toc">
            <!-- Dynamically generated TOC will be inserted here -->
          </nav>
        </aside>
      </div>
    </main>
  </body>
</html>

<style>
  :root {
    --font-serif: "Source Serif Pro", Georgia, serif;
    --font-sans: "Inter", system-ui, sans-serif;
    --text-color: #1e1e1e;
    --gray: #666;
    --accent: #3b82f6;
    --bg: #f9f9f9;
  }

  body.blog-post {
    margin: 0;
    font-family: var(--font-sans);
    color: var(--text-color);
    background-color: var(--bg);
  }

  .container {
  max-width: 100%;
  width: 1200px;
  padding: 2rem 1rem 4rem;
  margin: 0 auto;
  overflow-x: hidden;
  box-sizing: border-box;
}

@media (max-width: 768px) {
  .container {
    width: 100%;
    padding: 1rem;
  }
}

  .post-header {
    margin-bottom: 2rem;
    text-align: center;
  }

  .post-header h1 {
    font-size: 2.2rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    line-height: 1.3;
  }

  .post-meta {
    font-size: 0.85rem;
    color: var(--gray);
    margin-top: 0.25rem;
  }

  .content-layout {
    display: flex; /* Use Flexbox to arrange child elements horizontally (side by side) */
    gap: 2rem; /* Create 2rem (32px) space between post-content and post-outline */
  }

  .post-content {
    flex: 3; /* Take 3 parts of the available flex space (e.g., 3/4 if post-outline is 1) */
  }

  .post-outline {
    flex: 1; /* Occupies 1/4 of the total width */
    min-width: 200px; /* Prevents the outline from becoming too narrow */
    max-width: 300px; /* (Optional) Don't let outline become too wide on large screens */
    position: sticky; /* Makes the outline "stick" to the top as you scroll */
    top: 6rem; /* Distance from top when sticky */
    align-self: flex-start; /* Aligns the outline to start at the top, not center */
    font-size: 0.9rem; /* Slightly smaller text for outline */
    color: var(--gray); /* Lighter color for secondary information */
    padding: 1rem; /* Internal padding */
    border-left: 1px solid #eee; /* Visual separation from article content */
    max-height: calc(100vh - 6rem); /* Limit height to viewport minus header */
    overflow-y: auto; /* If too tall, allow scroll inside the outline */
  }

  @media (max-width: 768px) {
    .post-outline {
      display: none;
    }
  }

  .prose h2,
  .prose h3 {
    font-weight: 600;
    margin-top: 2.2rem;
    margin-bottom: 1rem;
  }

  .prose h2 {
    font-size: 1.7rem;
  }

  .prose h3 {
    font-size: 1.3rem;
  }

  .prose p {
    margin-bottom: 1.2rem;
  }

  .prose a {
    color: var(--accent);
    text-decoration: underline;
  }

  .prose code {
    background: #f3f4f6;
    padding: 0.2em 0.4em;
    border-radius: 4px;
    font-family: Menlo, Consolas, monospace;
    font-size: 0.95em;
  }

  .prose pre {
    background: #111827;
    color: #e5e7eb;
    padding: 1rem;
    border-radius: 8px;
    overflow-x: auto;
    margin: 2rem 0;
    font-size: 0.95rem;
  }

  .prose blockquote {
    border-left: 4px solid #ddd;
    padding-left: 1rem;
    color: #555;
    font-style: italic;
    margin: 2rem 0;
  }

  .prose img {
    max-width: 100%;
    border-radius: 8px;
    margin: 2rem 0;
  }
</style>
